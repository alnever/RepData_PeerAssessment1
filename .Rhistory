available.packages()
add2 <- function (x,y) {
x + y
}
add2(3,5)
above10 <- function(vect) {
vect > 10
}
above10(c(1,2,3,10,11,4,5,12))
above10 <- function(vect) {
vect[vect > 10]
}
above10(c(1,2,3,10,11,4,5,12))
aboveN <- function(vect, n) {
use <- vect > n
vect[use]
}
aboveN(c(1,2,3,10,11,4,5,12),5)
aboveN <- function(vect, n = 10) {
use <- vect > n
vect[use]
}
x <- 1:20
abloveN(x)
aboveN(x)
aboveN(x,12)
?mean
formals(above10)
search()
args(power)
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
square <- make.power(2)
class(square)
?square
args(square)
qube <- make.power(3)
equal
?equality
?is.equal
?is.equality
identical(square, qube)
square(3)
qube(3)
qube
square
ls(environment(qube))
ls(environment(qube))["n"]
env3 <- ls(environment(qube))
env3$n
env3
get("n", env3)
get("n", environment(qube))
env3 <- environment(qube)
get("n", env3)
env3
class(env3)
env3$n
y <- 10
g <- function(x)
{
y <- 2
x + y
}
f <- function(x)
{
x + y
}
f(1)
g(1)
f(1)
strsplit("Hello world")
strsplit("Hello world", split="")
fact <- factor(strsplit("Hello world",split=""))
fact <- as.factor(strsplit("Hello world",split=""))
s <- strsplit("Hello world", split="")
class(s)
fact <- as.factor(s)
class(s[1])
class(s[[1]])
fact <- as.factor(s[[1]])
fact
fact[d]
fact["d"]
table(fact)
unlist(fact)
unclass(fact)
v <- as.vector(fact)
v
q()
rm(list = ls())
q()
library(ggplot2)
d <- diamonds
fit <- princomp(d, cor=TRUE)
fit <- princomp(d)
d <- transform(d, cut = as.numeric(unclass(cut)))
d <- transform(d, color = as.numeric(unclass(color)))
d <- transform(d, clarity = as.numeric(unclass(clarity)))
head(d)
fit <- princomp(d)
str(fit)
plot(fit,type="lines")
fit$scores
biplot(fit)
scale(d)
d <- scale(d)
head(d)
s <- svd(d)
str(d)
str(s)
plot(s$d)
dim(d)
a <- s$u[,1:7] %*% diag(s$d[1:7]) %*% t(s$v[,1:7])
dim(a)
dim(s$u[,1:7])
dim(t(s$v[,1:7]))
q()
setwd("d:/work/r/05_ReproducibleResearch/RepData_PeerAssessment1/")
data <- read.csv("activity.csv")
data$date = as.Date(data$date)
str(data)
nrow(data)
weekend = as.POSIXct(data$date).wday %in% c(0,6)
weekend <- as.POSIXct(data$date).wday %in% c(0,6)
weekend <- as.POSIXct(data$date)$wday %in% c(0,6)
weekend <- as.POSIXlt(data$date)$wday %in% c(0,6)
length(weekend)
weekend <- as.POSIXlt(data$date)$wday %in% c(0,6)
data$daytype  <- factor(ifelse(as.POSIXlt(data$date)$wday %in% c(0,6),"weekend","weekday"))
str(data)
?group_by
?agregate
?aggregate
totals <- aggregate(x = data, by = date, FUN = sum)
totals <- aggregate(x = data, by = date, FUN = sum)
totals <- aggregate(x = data, by = list(date), FUN = sum)
class(data)
class(date)
totals <- aggregate(x = data, by = list(data$date), FUN = sum)
str(data)
tmp <- data[,c("steps","date")]
str(tmp)
dir(tmp)
dim(tmp)
totals <- aggregate(x = tmp, by = list(tmp$date), FUN = sum)
totals <- aggregate.data.frame()
?aggregate.data.frame
totals <- aggregate(data$steps, by = list(tmp$date), FUN = sum)
head(totals)
totals <- aggregate(data$steps, by = list(data$date), FUN = sum)
head(totals)
totals <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totals) = c(date,steps)
head(totals)
totals <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totals) = c("date","steps")
head(totals)
sum(is.na(totals$steps))
mean(is.na(totals$steps))
nrow(totals)
dim(totals)
mean(totals$steps, na.rm =TRUE)
median(totals$steps, na.rm =TRUE)
hist(totals$steps)
hist(totals$steps, xlab="Step number", main = "Histogram of Step number")
abline(v = mean(totals$steps, na.rm =TRUE), col = "blue")
median(v = mean(totals$steps, na.rm =TRUE), col = "red")
hist(totals$steps, xlab="Step number", main = "Histogram of Step number")
abline(v = mean(totals$steps, na.rm =TRUE), col = "blue")
abline(v = median(totals$steps, na.rm =TRUE), col = "red")
?hist
hist(totals$steps, xlab="Step number", main = "Histogram of Step number", labels = TRUE)
library(knitr)
opt_kni\
?opt_knit
opts_chunk
?opts_chunk
opts_chunk$get("fig.path")
opts_chunk$set(fig.path="figure")
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = FALSE)
head(avgs)
?aggregate
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean)
?aggregate
head(avgs)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.action = na.omit)
head(avgs)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean,  na.action = na.exclude)
head(avgs)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = TRUE)
head(avgs)
plot(avgs$interval, avgs$steps, type = "l",
xlab = "Intervals",
ylab = "Number of steps",
main = "Agerage number of steps per 5-min interval"
)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = TRUE)
names(avgs) = c("interval", "steps")
dim(avgs)
str(avgs)
plot(avgs$interval, avgs$steps, type = "l",
xlab = "Intervals",
ylab = "Number of steps",
main = "Agerage number of steps per 5-min interval"
)
library(ggplot2)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path(aes(interval), col = "blue")
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path(aes(interval, steps), col = "blue")
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$steps), max(avgs$steps), by = 0.5),1))
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$steps), max(avgs$steps), by = 0.5),1))
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$steps), max(avgs$steps), by = 0.5),100))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$steps), max(avgs$steps), by = 0.5),1))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$steps), max(avgs$steps), by = 100),1))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$steps), max(avgs$steps), by = 100),1))
print(g)
round(seq(min(avgs$steps), max(avgs$steps), by = 1000)
)
round(seq(min(avgs$steps), max(avgs$steps), by = 1000)
)
seq(min(avgs$steps), max(avgs$steps), by = 1)
seq(min(avgs$interval), max(avgs$interval), by = 1)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = TRUE)
avgs$interval <- as.numeric(avgs$interval)
names(avgs) = c("interval", "steps")
dim(avgs)
str(avgs)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 1),1))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_line()
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
print(g)
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 1),1))
g <- ggplot(avgs, aes(as.numeric(interval), steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
print(g)
g <- ggplot(avgs, aes(as.numeric(interval), steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(as.numeric(avgs$interval)), max(as.numeric(avgs$interval)), by = 1),1))
print(g)
g <- ggplot(avgs, aes(as.numeric(interval), steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(as.numeric(avgs$interval)), max(as.numeric(avgs$interval)), by = 1),100))
print(g)
g <- ggplot(avgs, aes(as.numeric(interval), steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(as.numeric(avgs$interval)), max(as.numeric(avgs$interval)), by = 1),1000))
print(g)
seq(min(as.numeric(avgs$interval)), max(as.numeric(avgs$interval)), by = 1
)
head(avgs)
avgs$inte\
avgs$interval <- as.integer(avgs$interval)
head(avgs)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = TRUE)
head(avgs)
t <- transform(avgs, i = integer(interval))
t <- transform(avgs, i = integer(avgs$interval))
names(avgs) = c("interval", "steps")
t <- transform(avgs, i = integer(avgs$interval))
avgs$int = unclass(avgs$interval)
head(avgs)
avgs$int = integer(avgs$interval)
avgs$int <- as.integer(avgs$interval)
head(avgs)
avgs$int <- as.numeric(avgs$interval)
head(avgs)
str(avgs)
?agregate
?aggregate
avgs$int <- as.numeric(paste(avgs$interval)
)
head(avgs)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = TRUE)
names(avgs) = c("interval", "steps")
avgs$interval <- as.numeric(paste(avgs$interval)
)
head(avgs)
str(avgs)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 1),100))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 1),1000))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 1),1))
print(g)
seq(min(avgs$interval), max(avgs$interval), by = 1)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 1000),1))
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 100),1))
print(g)
avgs[avgs$avg_steps == max(avgs$avg_steps),"interval"]
as.integer(avgs[avgs$avg_steps == max(avgs$avg_steps),"interval"])
as.integer(avgs[avgs$steps == max(avgs$steps),"interval"])
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 100),1))
g <- g + labs(title = "The average daily activity pattern", xlab = "Intervals", ylab = "Average number of steps")
print(g)
g <- ggplot(avgs, aes(interval, steps))
g <- g + geom_point(col = "blue", alpha = .5, size = 1)
g <- g + geom_path()
g <- g + scale_x_continuous(breaks = round(seq(min(avgs$interval), max(avgs$interval), by = 100),1))
g <- g + labs(title = "The average daily activity pattern")
g <- g + xlab("Intervals")
g <- g + ylab("Average number of steps")
print(g)
avgs <- aggregate(data$steps, by = list(factor(data$interval)), FUN = mean, na.rm = TRUE)
avgs <- aggregate(data$steps, by = list(data$interval), FUN = mean, na.rm = TRUE)
avgs$interval <- as.numeric(paste(avgs$interval))
names(avgs) <- c("interval", "steps")
dim(avgs)
str(avgs)
avgs$interval <- as.numeric(paste(avgs$interval))
